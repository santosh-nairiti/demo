name: Deploy to Cloudflare

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Minify and uglify CSS and JS
      run: |
        mkdir -p dist/js
        npm run minify-js
        mkdir -p dist/css
        npm run minify-css
        
    - name: Print Minified Files
      run: |
        echo "Listing minified files:"
        ls -lh dist/css
        ls -lh dist/js
      
    - name: Print Files to be Deployed
      run: |
        echo "Listing all files to be deployed:"
        find dist -type f

    - name: Deploy to Cloudflare
      run: npx wrangler publish
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

    - name: Verify Deployment
      run: |
        echo "Fetching deployment versions from Cloudflare API"
        RESPONSE=$(curl -X GET "https://api.cloudflare.com/client/v4/accounts/${{secrets.CLOUDFLARE_ACCOUNT_ID}}/workers/services/demo/versions" \
        -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
        -H "Content-Type: application/json")
        echo "Raw JSON response:"
        echo "$RESPONSE"
        echo "$RESPONSE" | jq '.result[] | {id: .id, number: .number, source: .source, usage_model: .usage_model, script: .script, created_on: .created_on, modified_on: .modified_on, env: .env}'
      env:
        CLOUDFLARE_API_TOKEN: ${{secrets.CLOUDFLARE_API_TOKEN}}
        CLOUDFLARE_ACCOUNT_ID: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
